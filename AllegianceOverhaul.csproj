<Project Sdk="Microsoft.NET.Sdk">
  <!-- General -->
  <PropertyGroup>
    <Version>2.1.0.0</Version>
    <ModuleName>$(MSBuildProjectName)</ModuleName>
    <DisplayName>Allegiance Overhaul</DisplayName>
	<GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <Copyright>Copyright © 2020-2021 artifixer</Copyright>
	<Description>Clan allegiance system overhaul for Mount &amp; Blade II: Bannerlord</Description>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <Platforms>x64</Platforms>
    <LangVersion>9.0</LangVersion>
    <Nullable>enable</Nullable>
    <Configurations>Stable_Debug;Stable_Release;Beta_Debug;Beta_Release</Configurations>
    <RootNamespace>$(DisplayName)</RootNamespace>
  </PropertyGroup>

  <!-- Versions of Major Dependencies (For Package References & SubModule.xml Substitution) -->
  <PropertyGroup>
    <ButterLibVersion>1.0.27</ButterLibVersion>
    <HarmonyVersion>2.1.1</HarmonyVersion>
    <MCMVersion>4.3.10</MCMVersion>
  </PropertyGroup>

  <!-- Game Versions for Stable and Beta -->
  <PropertyGroup>
    <GameVersion Condition="$(IsStable) == 'true'">1.6.1</GameVersion>
    <GameVersion Condition="$(IsBeta) == 'true'">1.6.2</GameVersion>
  </PropertyGroup>

  <!-- Game Folder(s) -->
  <PropertyGroup>
    <!--
    Bannerlord's Root Folder. Leave empty if you want to try autoresolution. Recommended setup is to set, as an
    environment variable, BANNERLORD_GAME_DIR in the common case that you have only one game folder. If you have
    separate game folders for the stable and beta versions of the game, likewise set BANNERLORD_STABLE_DIR and
    BANNERLORD_BETA_DIR.
    -->
    <GameFolder Condition="$(IsStable) == 'true'">$(BANNERLORD_STABLE_DIR)</GameFolder>
    <GameFolder Condition="$(IsBeta) == 'true'">$(BANNERLORD_BETA_DIR)</GameFolder>
    <GameFolder Condition="$(GameFolder) == ''">$(BANNERLORD_GAME_DIR)</GameFolder>
  </PropertyGroup>

  <!-- Automatic Game Folder Resolution -->
  <PropertyGroup>
    <!--Windows-->
    <!--Get from Registry (not working with dotnet right now)-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Windows_NT'">$(registry:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 261550@InstallLocation)</GameFolder>
    <!--Set a default value if registry value is missing-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Windows_NT'">C:\Program Files (x86)\Steam\steamapps\common\Mount &amp; Blade II Bannerlord</GameFolder>
    <!--Unix-->
    <GameFolder Condition="!Exists($(GameFolder)) AND $(OS) == 'Unix'">~/.steam/root/steamapps/common/Mount &amp; Blade II Bannerlord</GameFolder>
  </PropertyGroup>

  <!-- Mod Folder -->
  <PropertyGroup>
    <ModFolder Condition="$(ModFolder) == ''">$(GameFolder)\Modules\$(ModuleName)</ModFolder>
  </PropertyGroup>

  <!-- STABLE, BETA, and e.g., e157 / e158 Constants Defined in Code -->
  <PropertyGroup>
    <GameVersionConstant>e$([System.String]::Copy('$(GameVersion)').Replace('.',''))</GameVersionConstant>
    <DefineConstants>$(DefineConstants);$(GameVersionConstant)</DefineConstants>
  </PropertyGroup>
  
  <!-- Extra Substitution Variables to Use in SubModule.xml -->
  <ItemGroup>
    <SubModuleOverrides Include="DisplayName">
      <Regex>\$displayname\$</Regex>
      <Replacement>$(DisplayName)</Replacement>
    </SubModuleOverrides>
    <SubModuleOverrides Include="MCMVersion">
      <Regex>\$mcmversion\$</Regex>
      <Replacement>$(MCMVersion)</Replacement>
    </SubModuleOverrides>
  </ItemGroup>
  
  <!-- NuGet Packages -->
  <ItemGroup>
    <PackageReference Include="Lib.Harmony" Version="$(HarmonyVersion)" IncludeAssets="compile" />
    <PackageReference Include="Bannerlord.ButterLib" Version="$(ButterLibVersion)" IncludeAssets="compile" />
    <PackageReference Include="Bannerlord.MCM" Version="$(MCMVersion)" IncludeAssets="compile" />
    <!-- Microsoft.CSharp is used for its source-only 'dynamic' implementation. -->
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <!-- Enable NET5 Features on NET472 -->
    <PackageReference Include="IsExternalInit" Version="1.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Nullable" Version="1.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Directly-Referenced Game Assemblies -->
  <ItemGroup>
    <Reference Include="$(GameFolder)\bin\Win64_Shipping_Client\TaleWorlds.*.dll" Exclude="$(GameFolder)\bin\Win64_Shipping_Client\TaleWorlds.Native.dll">
      <HintPath>%(Identity)</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="$(GameFolder)\Modules\Native\bin\Win64_Shipping_Client\*.dll">
      <HintPath>%(Identity)</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="$(GameFolder)\Modules\SandBox\bin\Win64_Shipping_Client\*.dll">
      <HintPath>%(Identity)</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="$(GameFolder)\Modules\SandBoxCore\bin\Win64_Shipping_Client\*.dll">
      <HintPath>%(Identity)</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="$(GameFolder)\Modules\StoryMode\bin\Win64_Shipping_Client\*.dll">
      <HintPath>%(Identity)</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Reference Update="C:\Program Files %28x86%29\Steam\steamapps\common\Mount &amp; Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.CampaignSystem.dll">
      <Aliases>global,TWCS</Aliases>
    </Reference>
  </ItemGroup>

  <!-- Hide from Solution Explorer -->
  <ItemGroup>
    <None Update="*.md" Visible="false" />
    <None Update="LICENSE" Visible="false" />
	<None Update="*.xsd" Visible="false" />
    <None Update="packages.config" Visible="false" />
    <None Update=".gitignore" Visible="false" />
  </ItemGroup>

  <!-- Game version in Assembly attributes -->
  <Target Name="AddGameVersionMetadaAssemblyAttributes" BeforeTargets="CoreGenerateAssemblyInfo">
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>GameVersion</_Parameter1>
        <_Parameter2>$(GameVersionConstant)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>	
	
  <!-- Post-build copying to game folder -->
  <ItemGroup>
	<ModuleData Include="$(ProjectDir)\ModuleData\**/*.*" />
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ModFolder)\bin\Win64_Shipping_Client\" />
	<Copy SourceFiles="$(ProjectDir)\SubModule.xml" DestinationFolder="$(ModFolder)\" />        
    <Copy SourceFiles="@(ModuleData)" DestinationFolder="$(ModFolder)\ModuleData\%(RecursiveDir)" />		
  </Target>
  <Target Name="PostBuildFillSubModule" AfterTargets="PostBuildEvent" Condition="$(ModuleName) != '' AND Exists($(ModFolder))">
    <ItemGroup>
      <SubModuleOverrides Include="ModuleName">
        <Regex>\$modulename\$</Regex>
        <Replacement>$(ModuleName)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="Version">
        <Regex>\$version\$</Regex>
        <Replacement>$(Version)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="GameVersion" Condition="$(GameVersion) != ''">
        <Regex>\$gameversion\$</Regex>
        <Replacement>$(GameVersion)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="HarmonyVersion" Condition="$(HarmonyVersion) != ''">
        <Regex>\$harmonyversion\$</Regex>
        <Replacement>$(HarmonyVersion)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="ButterLibVersion" Condition="$(ButterLibVersion) != ''">
        <Regex>\$butterlibversion\$</Regex>
        <Replacement>$(ButterLibVersion)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="UIExtenderExVersion" Condition="$(UIExtenderExVersion) != ''">
        <Regex>\$uiextenderexversion\$</Regex>
        <Replacement>$(UIExtenderExVersion)</Replacement>
      </SubModuleOverrides>
      <SubModuleOverrides Include="ModuleLoaderVersion" Condition="$(ModuleLoaderVersion) != ''">
        <Regex>\$moduleloaderversion\$</Regex>
        <Replacement>$(ModuleLoaderVersion)</Replacement>
      </SubModuleOverrides>
    </ItemGroup>

    <ReplaceFileText Condition="'@(SubModuleOverrides-&gt;Count())' &gt; 0" File="$(GameFolder)/Modules/$(ModuleName)/SubModule.xml" Regex="%(SubModuleOverrides.Regex)" ReplacementText="%(SubModuleOverrides.Replacement)" />
  </Target>
  <UsingTask TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <File ParameterType="System.String" Required="true" />
      <Regex ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          System.IO.File.WriteAllText(
          File,
          System.Text.RegularExpressions.Regex.Replace(System.IO.File.ReadAllText(File), Regex, ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask>	
</Project>